generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  role     String @default("DEFAULT")
}

// <----- ------>
// <----- PERSONAJES ------>
model Characters {
  id          String  @id @unique @default(uuid())
  name        String
  description String
  role        String
  element     String
  rarity      String
  region      String
  weapon      String
  attribute   String
  is_public   Boolean @default(false)
  is_new      Boolean @default(false)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  images            CharacterImage?
  video_guide       VideoGuideCharacter?
  weapons           WeaponCharacter[]
  artifacts         ArtifactCharacter[]
  materials         MaterialCharacter[]
  stats_priority    StatsPriorityCharacter?
  ascensions        AscensionCharacter[]
  talents_ascension TalentsAscensionCharacter[]
  teams             TeamsCharacter[]
  talents           TalentsCharacter[]
  passives          PassivesCharacter[]
  constellations    ConstellationsCharacter[]
  tierlist          TierCharacter[]
}

model CharacterImage {
  id           String @id @unique @default(uuid())
  character_id String @unique

  profile_image_url String?
  splash_art_url    String?

  character Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt
}

// <----- ------>
// <----- ARMAS ------>
model Weapons {
  id                  String  @id @unique @default(uuid())
  image_url           String?
  name                String
  type                String
  rarity              String
  base_attack         Int     @default(0)
  main_stat           String
  passive_description String

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  bests_characters WeaponBestCharacters[]
  ascensions       WeaponAscensions[]
}

model WeaponBestCharacters {
  id           String @id @default(uuid())
  weapon_id    String
  character_id String

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  weapon Weapons @relation(fields: [weapon_id], references: [id], onDelete: Cascade)
}

model WeaponAscensions {
  id        String @id @default(uuid())
  weapon_id String

  order           Int                        @default(0)
  level           String
  ascension_level String
  cost            Int                        @default(0)
  materials       WeaponAscensionMaterials[]

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  weapon Weapons @relation(fields: [weapon_id], references: [id], onDelete: Cascade)
}

model WeaponAscensionMaterials {
  id           String @id @default(uuid())
  ascension_id String

  material_id String
  quantity    Int    @default(0)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  ascension WeaponAscensions @relation(fields: [ascension_id], references: [id], onDelete: Cascade)
}

model WeaponCharacter {
  id           String @id @unique @default(uuid())
  character_id String
  weapon_id    String
  order        Int    @default(0)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  character Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- ARTEFACTOS ------>
model Artifacts {
  id                String  @id @unique @default(uuid())
  image_url         String?
  name              String
  rarity            String
  bonus_description String

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt
}

model ArtifactCharacter {
  id           String @id @unique @default(uuid())
  character_id String
  artifact_id  String
  order        Int    @default(0)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  character Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- MATERIALES ------>
model Materials {
  id          String  @id @unique @default(uuid())
  image_url   String?
  name        String
  description String
  type        String
  rarity      String

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt
}

model MaterialCharacter {
  id           String @id @unique @default(uuid())
  character_id String
  material_id  String

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  character Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- VIDEO GUIA ------>
model VideoGuideCharacter {
  id           String @id @unique @default(uuid())
  character_id String @unique

  youtuber_name    String
  youtuber_channel String
  embed_video_url  String

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  video_guide Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- TALENTOS ------>
model TalentsAscensionCharacter {
  id           String @id @unique @default(uuid())
  character_id String

  order           Int                                 @default(0)
  level           String
  ascension_level String
  cost            Int                                 @default(0)
  materials       TalentsAscensionCharacterMaterial[]

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  talent Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
}

model TalentsAscensionCharacterMaterial {
  id           String @id @unique @default(uuid())
  ascension_id String

  material_id String
  quantity    Int    @default(0)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  talents TalentsAscensionCharacter @relation(fields: [ascension_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- ASCENSIONES ------>
model AscensionCharacter {
  id           String @id @unique @default(uuid())
  character_id String

  order           Int                 @default(0)
  level           String
  ascension_level String
  cost            Int                 @default(0)
  materials       MaterialAscension[]

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  ascensions Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
}

model MaterialAscension {
  id           String @id @unique @default(uuid())
  ascension_id String
  material_id  String
  character_id String

  order    Int @default(0)
  quantity Int @default(0)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  materials AscensionCharacter @relation(fields: [ascension_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- ESTADISTICAS PRIORITARIAS ------>
model StatsPriorityCharacter {
  id           String @id @unique @default(uuid())
  character_id String @unique

  sand_stat      String
  globet_stat    String
  circlet_stat   String
  order_priority String

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  stats_priority Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- EQUIPOS POR PERSONAJE ------>
model TeamsCharacter {
  id           String @id @unique @default(uuid())
  character_id String

  name       String
  order      Int               @default(0)
  characters TeamsCharacters[]

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  character Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
}

model TeamsCharacters {
  id      String @id @unique @default(uuid())
  team_id String

  character_id  String
  order         Int    @default(0)
  constellation Int    @default(0)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  teams TeamsCharacter @relation(fields: [team_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- TALENTOS ------>
model TalentsCharacter {
  id           String @id @unique @default(uuid())
  character_id String

  title       String
  image_url   String?
  description String
  type        String
  order       Int     @default(0)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  skills Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- PASIVAS ------>
model PassivesCharacter {
  id           String @id @unique @default(uuid())
  character_id String

  title       String
  image_url   String?
  description String
  type        String
  order       Int     @default(0)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  passives Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- CONSTELACIONES ------>
model ConstellationsCharacter {
  id           String @id @unique @default(uuid())
  character_id String

  title       String
  image_url   String?
  description String
  type        String
  order       Int     @default(0)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  constellations Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- EQUIPOS ------>
model Team {
  id String @id @unique @default(uuid())

  name       String
  order      Int              @default(0)
  characters TeamCharacters[]

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt
}

model TeamCharacters {
  id      String @id @unique @default(uuid())
  team_id String

  character_id  String
  order         Int    @default(0)
  constellation Int    @default(0)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  teams Team @relation(fields: [team_id], references: [id], onDelete: Cascade)
}

// <----- ------>
// <----- TIERLIST ------>
model TierList {
  id    String @id @unique @default(uuid())
  order Int    @default(0)

  tier_category String

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  tiers TierRow[]
}

model TierRow {
  id          String @id @unique @default(uuid())
  tierlist_id String

  order     Int    @default(0)
  tier_rank String

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  characters TierCharacter[]
  tierlist   TierList        @relation(fields: [tierlist_id], references: [id], onDelete: Cascade)
}

model TierCharacter {
  id String @id @default(uuid())

  tier_id      String
  character_id String

  order Int @default(0)

  date_created DateTime @default(now())
  date_updated DateTime @updatedAt

  character Characters @relation(fields: [character_id], references: [id], onDelete: Cascade)
  tier_row  TierRow    @relation(fields: [tier_id], references: [id], onDelete: Cascade)
}
